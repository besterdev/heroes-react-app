{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/TopUserList.js","components/Home.js","components/UserList.js","components/AddUser.js","components/EditUser.js","App.js","serviceWorker.js","index.js"],"names":["state","action","type","users","payload","filter","user","id","updateUser","map","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AddReducer","dispatch","Provider","value","addUser","removeUser","editUser","TopUserList","useContext","useState","topUser","setTopUser","useEffect","interval","setInterval","checktop3","clearInterval","byDate","slice","sort","a","b","score","ListGroup","className","length","to","key","style","maxWidth","name","Home","margin","UserList","ListGroupItem","Button","onClick","AddUser","setName","Form","onSubmit","e","preventDefault","newUser","uuid","FormGroup","Label","Input","onChange","target","console","log","required","EditUser","props","selectedUser","setSelectedUser","history","useHistory","currentUserId","match","params","userId","find","placeholder","push","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2533bbab.chunk.js","sourcesContent":["export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_USER\":\r\n      return {\r\n        users: [action.payload, ...state.users],\r\n      };\r\n\r\n    case \"REMOVE_USER\":\r\n      return {\r\n        users: state.users.filter((user) => {\r\n          return user.id !== action.payload;\r\n        }),\r\n      };\r\n\r\n    case \"EDIT_USER\":\r\n      const updateUser = action.payload;\r\n      const updateUsers = state.users.map((user) => {\r\n        if (user.id === updateUser.id) {\r\n          return updateUser;\r\n        }\r\n        return user;\r\n      });\r\n      return {\r\n        users: updateUsers,\r\n      };\r\n\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport AddReducer from \"./AppReducer\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AddReducer, initialState);\r\n\r\n  const addUser = (user) => {\r\n    dispatch({\r\n      type: \"ADD_USER\",\r\n      payload: user,\r\n    });\r\n  };\r\n\r\n  const removeUser = (id) => {\r\n    dispatch({\r\n      type: \"REMOVE_USER\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const editUser = (user) => {\r\n    dispatch({\r\n      type: \"EDIT_USER\",\r\n      payload: user,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{ users: state.users, addUser, removeUser, editUser }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ListGroup, ListGroupItem, Label, Input, Button } from \"reactstrap\";\r\n\r\nexport default function TopUserList() {\r\n  const { users } = useContext(GlobalContext);\r\n  const [topUser, setTopUser] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(checktop3, 1000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  const checktop3 = () => {\r\n    var byDate = users.slice(0);\r\n    byDate.sort(function (a, b) {\r\n      return b.score - a.score;\r\n    });\r\n\r\n    setTopUser(...topUser, byDate);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListGroup className=\"mt-4\">\r\n        {topUser.length > 0 ? (\r\n          <Link to={`/edit/${topUser[0].id}`} key={topUser[0].id}>\r\n            <div\r\n              className=\"card text-white bg-info mb-3\"\r\n              style={{ maxWidth: \"18rem\" }}\r\n            >\r\n              <div className=\"card-header\">Heroe top 1</div>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Name: {topUser[0].name}</h5>\r\n                <p className=\"card-text\">Score: {topUser[0].score}</p>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        ) : (\r\n          <h4 className=\"text-center\">don't have heros 1</h4>\r\n        )}\r\n      </ListGroup>\r\n\r\n      <ListGroup className=\"mt-4\">\r\n        {topUser.length > 1 ? (\r\n          <Link to={`/edit/${topUser[1].id}`} key={topUser[1].id}>\r\n            <div\r\n              className=\"card text-white bg-info mb-3\"\r\n              style={{ maxWidth: \"18rem\" }}\r\n            >\r\n              <div className=\"card-header\">Heroe top 3</div>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Name: {topUser[1].name}</h5>\r\n                <p className=\"card-text\">Score: {topUser[1].score}</p>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        ) : (\r\n          <h4 className=\"text-center\">don't have heros 3</h4>\r\n        )}\r\n      </ListGroup>\r\n\r\n      <ListGroup className=\"mt-4\">\r\n        {topUser.length > 2 ? (\r\n          <Link to={`/edit/${topUser[2].id}`} key={topUser[2].id}>\r\n            <div\r\n              className=\"card text-white bg-info mb-3\"\r\n              style={{ maxWidth: \"18rem\" }}\r\n            >\r\n              <div className=\"card-header\">Heroe top 2</div>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Name: {topUser[2].name}</h5>\r\n                <p className=\"card-text\">Score: {topUser[2].score}</p>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        ) : (\r\n          <h4 className=\"text-center\">don't have heros 2</h4>\r\n        )}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TopUserList from \"./TopUserList\";\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"card-box\">\r\n      <h1 className=\"text-center\">Tour of Heroes</h1>\r\n      <Link to=\"/\" className=\"btn btn-secondary \" style={{ margin: 10 }}>\r\n        Dashboard\r\n      </Link>\r\n      <Link to=\"/add\" className=\"btn btn-secondary\">\r\n        Hero\r\n      </Link>\r\n      <h3 className=\"text-center\">Top Heroes</h3>\r\n      <TopUserList/>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { ListGroup, ListGroupItem, Label, Input, Button } from \"reactstrap\";\r\nexport default function UserList() {\r\n  const { users, removeUser } = useContext(GlobalContext);\r\n\r\n  return (\r\n\r\n    \r\n    <ListGroup className=\"mt-4\">\r\n        \r\n      {users.length > 0 ? (\r\n        <>\r\n          {users.map((user) => (\r\n            <ListGroupItem className=\"d-flex\" key={user.id}>\r\n              <Link to={`/edit/${user.id}`}>\r\n                <strong style={{ margin: 5 }}>{user.score}</strong>\r\n                <strong style={{ margin: 5 }}>{user.name}</strong>\r\n              </Link>\r\n              <div className=\"ml-auto\">\r\n                <Button \r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => removeUser(user.id)}\r\n                >\r\n                  X\r\n                </Button>\r\n              </div>\r\n            </ListGroupItem>\r\n          ))}\r\n          <br />\r\n        </>\r\n      ) : (\r\n        <h4 className=\"text-center\">No Heroes</h4>\r\n      )}\r\n    </ListGroup>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { GlobalContext } from \"../context//GlobalState\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\nimport UserList from \"./UserList\";\r\n\r\nexport default function AddUser() {\r\n  const [name, setName] = useState(\"\");\r\n  const { addUser } = useContext(GlobalContext);\r\n  const onChange = (e) => {\r\n    setName(e.target.value);\r\n    console.log(name);\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      id: uuid(),\r\n      name,\r\n      score: \"\",\r\n    };\r\n    addUser(newUser);\r\n    setName('')\r\n  };\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className=\"btn btn-secondary\" style={{ margin: 10 }}>\r\n        Dashboard\r\n      </Link>\r\n      <Link to=\"/add\" className=\"btn btn-secondary\">\r\n        Hero\r\n      </Link>\r\n      <Form onSubmit={onSubmit}>\r\n        <FormGroup>\r\n          <Label>Hero name:</Label>\r\n          <Input type=\"text\" value={name} onChange={onChange} required/>\r\n        </FormGroup>\r\n        <Button type=\"submit\">\r\n          Save\r\n        </Button>\r\n      </Form>\r\n      <UserList />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { GlobalContext } from \"../context//GlobalState\";\r\n\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nexport default function EditUser(props) {\r\n  const [selectedUser, setSelectedUser] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    score: \"\",\r\n  });\r\n  const { users, editUser } = useContext(GlobalContext);\r\n  const history = useHistory();\r\n  const currentUserId = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    const userId = currentUserId;\r\n    const selectedUser = users.find((user) => user.id === userId);\r\n    setSelectedUser(selectedUser);\r\n  }, [currentUserId, users]);\r\n\r\n  const onChangename = (e) => {\r\n    setSelectedUser({ ...selectedUser, [e.target.name]: e.target.value });\r\n  };\r\n  const onChangescore = (e) => {\r\n    setSelectedUser({ ...selectedUser, [e.target.name]: e.target.value });\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    editUser(selectedUser);\r\n    history.push(\"/add\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <FormGroup>\r\n          <Label>Hero name:</Label>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Edit Name ...\"\r\n            name=\"name\"\r\n            value={selectedUser.name}\r\n            onChange={onChangename}\r\n          />\r\n          <br />\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Edit Score ...\"\r\n            name=\"score\"\r\n            value={selectedUser.score}\r\n            onChange={onChangescore}\r\n          />\r\n        </FormGroup>\r\n        <Button type=\"submit\" onClick={onSubmit}>\r\n          Save\r\n        </Button>\r\n        <Link to=\"/add\" className=\"btn btn-danger\">\r\n          Back\r\n        </Link>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport AddUser from \"./components/AddUser\";\nimport EditUser from \"./components/EditUser\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div style={{ margin: \"4rem auto\", maxWidth: \"20rem\" }}>\n      <GlobalProvider>\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/add\" component={AddUser} />\n            <Route path=\"/edit/:id\" component={EditUser} />\n          </Switch>\n        </Router>\n      </GlobalProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}